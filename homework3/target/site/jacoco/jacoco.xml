<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="homework3"><sessioninfo id="LAPTOP-RPH626EH-5e607220" start="1602074133156" dump="1602074134947"/><sessioninfo id="LAPTOP-RPH626EH-65a5da3c" start="1602074548141" dump="1602074549837"/><sessioninfo id="LAPTOP-RPH626EH-1862daa3" start="1602074652822" dump="1602074654288"/><sessioninfo id="LAPTOP-RPH626EH-78a2b7f5" start="1602075268930" dump="1602075270369"/><sessioninfo id="LAPTOP-RPH626EH-941f6220" start="1602075437245" dump="1602075438629"/><sessioninfo id="LAPTOP-RPH626EH-7e8e127a" start="1602075466086" dump="1602075467612"/><sessioninfo id="LAPTOP-RPH626EH-5a5feda1" start="1602075577264" dump="1602075578814"/><sessioninfo id="LAPTOP-RPH626EH-634e7c31" start="1602076064904" dump="1602076066411"/><sessioninfo id="LAPTOP-RPH626EH-f19b2a7" start="1602076423199" dump="1602076424676"/><sessioninfo id="LAPTOP-RPH626EH-1ebac402" start="1602076499085" dump="1602076500660"/><sessioninfo id="LAPTOP-RPH626EH-b57f5b81" start="1602076661026" dump="1602076662465"/><sessioninfo id="LAPTOP-RPH626EH-210c1c5d" start="1602076695139" dump="1602076696649"/><sessioninfo id="LAPTOP-RPH626EH-132dc836" start="1602076905553" dump="1602076907067"/><sessioninfo id="LAPTOP-RPH626EH-b06b4ec5" start="1602077161149" dump="1602077162556"/><sessioninfo id="LAPTOP-RPH626EH-1d79301a" start="1602077330086" dump="1602077332770"/><sessioninfo id="LAPTOP-RPH626EH-854a3fd4" start="1602077399273" dump="1602077400714"/><sessioninfo id="LAPTOP-RPH626EH-1fd9c134" start="1602077734866" dump="1602077736480"/><sessioninfo id="LAPTOP-RPH626EH-291cc7c4" start="1602077753852" dump="1602077755297"/><package name="edu/postech/csed332/homework3"><class name="edu/postech/csed332/homework3/DelegateTree" sourcefilename="DelegateTree.java"><method name="&lt;init&gt;" desc="(Ledu/postech/csed332/homework3/MutableGraph;)V" line="39"><counter type="INSTRUCTION" missed="4" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRoot" desc="()Ljava/util/Optional;" line="50"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDepth" desc="(Ljava/lang/Comparable;)I" line="57"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getHeight" desc="()I" line="65"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsVertex" desc="(Ljava/lang/Comparable;)Z" line="75"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addVertex" desc="(Ljava/lang/Comparable;)Z" line="81"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeVertex" desc="(Ljava/lang/Comparable;)Z" line="92"><counter type="INSTRUCTION" missed="0" covered="126"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsEdge" desc="(Ljava/lang/Comparable;Ljava/lang/Comparable;)Z" line="131"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdge" desc="(Ljava/lang/Comparable;Ljava/lang/Comparable;)Z" line="137"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEdge" desc="(Ljava/lang/Comparable;Ljava/lang/Comparable;)Z" line="147"><counter type="INSTRUCTION" missed="2" covered="20"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSources" desc="(Ljava/lang/Comparable;)Ljava/util/Set;" line="156"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTargets" desc="(Ljava/lang/Comparable;)Ljava/util/Set;" line="162"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVertices" desc="()Ljava/util/Set;" line="168"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdges" desc="()Ljava/util/Set;" line="174"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkInv" desc="()Z" line="184"><counter type="INSTRUCTION" missed="2" covered="67"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="216"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="13" covered="417"/><counter type="BRANCH" missed="3" covered="43"/><counter type="LINE" missed="2" covered="79"/><counter type="COMPLEXITY" missed="4" covered="35"/><counter type="METHOD" missed="1" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="edu/postech/csed332/homework3/MutableTree" sourcefilename="MutableTree.java"/><class name="edu/postech/csed332/homework3/MutableGraph" sourcefilename="MutableGraph.java"/><class name="edu/postech/csed332/homework3/ParentPointerTree" sourcefilename="ParentPointerTree.java"><method name="&lt;init&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRoot" desc="()Ljava/util/Optional;" line="51"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDepth" desc="(Ljava/lang/Comparable;)I" line="58"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getHeight" desc="()I" line="67"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsVertex" desc="(Ljava/lang/Comparable;)Z" line="77"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addVertex" desc="(Ljava/lang/Comparable;)Z" line="83"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeVertex" desc="(Ljava/lang/Comparable;)Z" line="94"><counter type="INSTRUCTION" missed="0" covered="70"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsEdge" desc="(Ljava/lang/Comparable;Ljava/lang/Comparable;)Z" line="118"><counter type="INSTRUCTION" missed="10" covered="7"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdge" desc="(Ljava/lang/Comparable;Ljava/lang/Comparable;)Z" line="125"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEdge" desc="(Ljava/lang/Comparable;Ljava/lang/Comparable;)Z" line="134"><counter type="INSTRUCTION" missed="2" covered="21"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSources" desc="(Ljava/lang/Comparable;)Ljava/util/Set;" line="143"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTargets" desc="(Ljava/lang/Comparable;)Ljava/util/Set;" line="154"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVertices" desc="()Ljava/util/Set;" line="164"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdges" desc="()Ljava/util/Set;" line="170"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkInv" desc="()Z" line="186"><counter type="INSTRUCTION" missed="2" covered="72"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="216"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="19" covered="433"/><counter type="BRANCH" missed="5" covered="49"/><counter type="LINE" missed="1" covered="80"/><counter type="COMPLEXITY" missed="5" covered="38"/><counter type="METHOD" missed="1" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="edu/postech/csed332/homework3/Tree" sourcefilename="Tree.java"><method name="getChildren" desc="(Ljava/lang/Comparable;)Ljava/util/Set;" line="51"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParent" desc="(Ljava/lang/Comparable;)Ljava/util/Optional;" line="62"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="edu/postech/csed332/homework3/Edge" sourcefilename="Edge.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Comparable;Ljava/lang/Comparable;)V" line="16"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSource" desc="()Ljava/lang/Comparable;" line="22"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTarget" desc="()Ljava/lang/Comparable;" line="26"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compareTo" desc="(Ledu/postech/csed332/homework3/Edge;)I" line="31"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="37"><counter type="INSTRUCTION" missed="4" covered="29"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="46"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="51"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="80"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="4" covered="9"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="edu/postech/csed332/homework3/AdjacencyListGraph" sourcefilename="AdjacencyListGraph.java"><method name="&lt;init&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsVertex" desc="(Ljava/lang/Comparable;)Z" line="33"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addVertex" desc="(Ljava/lang/Comparable;)Z" line="39"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeVertex" desc="(Ljava/lang/Comparable;)Z" line="48"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsEdge" desc="(Ljava/lang/Comparable;Ljava/lang/Comparable;)Z" line="59"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdge" desc="(Ljava/lang/Comparable;Ljava/lang/Comparable;)Z" line="66"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEdge" desc="(Ljava/lang/Comparable;Ljava/lang/Comparable;)Z" line="79"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSources" desc="(Ljava/lang/Comparable;)Ljava/util/Set;" line="89"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTargets" desc="(Ljava/lang/Comparable;)Ljava/util/Set;" line="99"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVertices" desc="()Ljava/util/Set;" line="105"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdges" desc="()Ljava/util/Set;" line="110"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkInv" desc="()Z" line="122"><counter type="INSTRUCTION" missed="2" covered="35"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="135"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getEdges$1" desc="(Ljava/util/Map$Entry;)Ljava/util/stream/Stream;" line="111"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getEdges$0" desc="(Ljava/util/Map$Entry;Ljava/lang/Comparable;)Ledu/postech/csed332/homework3/Edge;" line="111"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="29" covered="280"/><counter type="BRANCH" missed="2" covered="34"/><counter type="LINE" missed="3" covered="40"/><counter type="COMPLEXITY" missed="3" covered="30"/><counter type="METHOD" missed="1" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="edu/postech/csed332/homework3/Graph" sourcefilename="Graph.java"><method name="findReachableVertices" desc="(Ljava/lang/Comparable;)Ljava/util/Set;" line="80"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$findReachableVertices$1" desc="(Ljava/util/Set;Ljava/lang/Comparable;)Z" line="90"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$findReachableVertices$0" desc="(Ljava/lang/Comparable;)Ljava/util/stream/Stream;" line="89"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="edu/postech/csed332/homework3/ParentPointerTree$Node" sourcefilename="ParentPointerTree.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;I)V" line="21"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="DelegateTree.java"><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="1" cb="1"/><line nr="41" mi="4" ci="0" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="6" mb="0" cb="2"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="8" mb="0" cb="2"/><line nr="58" mi="0" ci="9" mb="0" cb="2"/><line nr="59" mi="0" ci="7" mb="0" cb="0"/><line nr="65" mi="0" ci="8" mb="0" cb="2"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="12" mb="0" cb="2"/><line nr="68" mi="0" ci="18" mb="0" cb="2"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="5" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="2"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="7" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="7" mb="0" cb="2"/><line nr="94" mi="0" ci="7" mb="0" cb="2"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="2"/><line nr="109" mi="0" ci="10" mb="0" cb="2"/><line nr="110" mi="0" ci="13" mb="0" cb="2"/><line nr="111" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="1" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="10" mb="0" cb="2"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="16" mb="0" cb="2"/><line nr="123" mi="0" ci="5" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="6" mb="0" cb="0"/><line nr="137" mi="0" ci="7" mb="0" cb="2"/><line nr="138" mi="0" ci="7" mb="0" cb="2"/><line nr="139" mi="0" ci="14" mb="0" cb="0"/><line nr="140" mi="0" ci="6" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="147" mi="0" ci="7" mb="0" cb="2"/><line nr="148" mi="2" ci="7" mb="1" cb="1"/><line nr="149" mi="0" ci="4" mb="0" cb="0"/><line nr="150" mi="0" ci="2" mb="0" cb="0"/><line nr="156" mi="0" ci="5" mb="0" cb="0"/><line nr="162" mi="0" ci="5" mb="0" cb="0"/><line nr="168" mi="0" ci="4" mb="0" cb="0"/><line nr="174" mi="0" ci="4" mb="0" cb="0"/><line nr="184" mi="0" ci="4" mb="0" cb="0"/><line nr="185" mi="0" ci="4" mb="0" cb="0"/><line nr="187" mi="0" ci="2" mb="0" cb="0"/><line nr="189" mi="0" ci="5" mb="0" cb="0"/><line nr="191" mi="0" ci="3" mb="0" cb="2"/><line nr="192" mi="0" ci="10" mb="0" cb="2"/><line nr="193" mi="2" ci="8" mb="1" cb="1"/><line nr="194" mi="0" ci="7" mb="0" cb="0"/><line nr="195" mi="0" ci="1" mb="0" cb="0"/><line nr="197" mi="0" ci="2" mb="0" cb="0"/><line nr="198" mi="0" ci="10" mb="0" cb="2"/><line nr="199" mi="0" ci="4" mb="0" cb="0"/><line nr="200" mi="0" ci="1" mb="0" cb="0"/><line nr="201" mi="0" ci="2" mb="0" cb="0"/><line nr="203" mi="0" ci="2" mb="0" cb="0"/><line nr="206" mi="0" ci="2" mb="0" cb="0"/><line nr="216" mi="0" ci="13" mb="0" cb="0"/><line nr="218" mi="0" ci="11" mb="0" cb="0"/><line nr="219" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="13" covered="417"/><counter type="BRANCH" missed="3" covered="43"/><counter type="LINE" missed="2" covered="79"/><counter type="COMPLEXITY" missed="4" covered="35"/><counter type="METHOD" missed="1" covered="15"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AdjacencyListGraph.java"><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="0" ci="7" mb="0" cb="2"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="6" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="7" mb="0" cb="2"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="12" mb="0" cb="2"/><line nr="51" mi="0" ci="9" mb="0" cb="2"/><line nr="52" mi="0" ci="8" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="15" mb="0" cb="4"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="15" mb="0" cb="4"/><line nr="68" mi="0" ci="13" mb="0" cb="2"/><line nr="69" mi="0" ci="13" mb="0" cb="2"/><line nr="71" mi="0" ci="8" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="13" mb="1" cb="3"/><line nr="80" mi="0" ci="8" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="12" mb="0" cb="2"/><line nr="91" mi="0" ci="9" mb="0" cb="2"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="9" mb="0" cb="2"/><line nr="100" mi="0" ci="6" mb="0" cb="0"/><line nr="105" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="6" mb="0" cb="0"/><line nr="111" mi="0" ci="17" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="12" mb="0" cb="2"/><line nr="123" mi="0" ci="15" mb="0" cb="2"/><line nr="124" mi="2" ci="6" mb="1" cb="1"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="135" mi="8" ci="0" mb="0" cb="0"/><line nr="136" mi="11" ci="0" mb="0" cb="0"/><line nr="137" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="29" covered="280"/><counter type="BRANCH" missed="2" covered="34"/><counter type="LINE" missed="3" covered="40"/><counter type="COMPLEXITY" missed="3" covered="30"/><counter type="METHOD" missed="1" covered="14"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Graph.java"><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="2"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="2"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="8" mb="0" cb="0"/><line nr="90" mi="0" ci="9" mb="0" cb="2"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MutableGraph.java"/><sourcefile name="ParentPointerTree.java"><line nr="21" mi="0" ci="2" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="2"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="7" mb="0" cb="2"/><line nr="59" mi="0" ci="9" mb="0" cb="2"/><line nr="61" mi="0" ci="7" mb="0" cb="0"/><line nr="67" mi="0" ci="7" mb="0" cb="2"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="12" mb="0" cb="2"/><line nr="70" mi="0" ci="18" mb="0" cb="2"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="5" ci="0" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="2"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="10" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="7" mb="0" cb="2"/><line nr="96" mi="0" ci="4" mb="0" cb="2"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="12" mb="0" cb="2"/><line nr="105" mi="0" ci="9" mb="0" cb="2"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="10" mb="0" cb="2"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="10" ci="5" mb="3" cb="1"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="0" ci="7" mb="0" cb="2"/><line nr="126" mi="0" ci="7" mb="0" cb="2"/><line nr="127" mi="0" ci="17" mb="0" cb="0"/><line nr="128" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="7" mb="0" cb="2"/><line nr="135" mi="2" ci="8" mb="1" cb="1"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="2"/><line nr="145" mi="0" ci="2" mb="0" cb="0"/><line nr="147" mi="0" ci="10" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="0" ci="4" mb="0" cb="0"/><line nr="155" mi="0" ci="12" mb="0" cb="2"/><line nr="156" mi="0" ci="9" mb="0" cb="2"/><line nr="157" mi="0" ci="4" mb="0" cb="0"/><line nr="158" mi="0" ci="2" mb="0" cb="0"/><line nr="164" mi="0" ci="4" mb="0" cb="0"/><line nr="170" mi="0" ci="4" mb="0" cb="0"/><line nr="171" mi="0" ci="12" mb="0" cb="2"/><line nr="172" mi="0" ci="8" mb="0" cb="0"/><line nr="173" mi="0" ci="6" mb="0" cb="0"/><line nr="174" mi="0" ci="4" mb="0" cb="0"/><line nr="175" mi="0" ci="1" mb="0" cb="0"/><line nr="176" mi="0" ci="2" mb="0" cb="0"/><line nr="186" mi="0" ci="4" mb="0" cb="0"/><line nr="187" mi="0" ci="4" mb="0" cb="0"/><line nr="188" mi="0" ci="2" mb="0" cb="0"/><line nr="189" mi="0" ci="5" mb="0" cb="0"/><line nr="191" mi="0" ci="3" mb="0" cb="2"/><line nr="192" mi="0" ci="12" mb="0" cb="2"/><line nr="193" mi="0" ci="9" mb="0" cb="2"/><line nr="194" mi="0" ci="4" mb="0" cb="0"/><line nr="195" mi="0" ci="1" mb="0" cb="0"/><line nr="197" mi="0" ci="1" mb="0" cb="0"/><line nr="198" mi="0" ci="2" mb="0" cb="0"/><line nr="199" mi="0" ci="10" mb="0" cb="2"/><line nr="200" mi="0" ci="4" mb="0" cb="0"/><line nr="201" mi="0" ci="1" mb="0" cb="0"/><line nr="202" mi="0" ci="3" mb="0" cb="0"/><line nr="204" mi="2" ci="5" mb="1" cb="1"/><line nr="206" mi="0" ci="2" mb="0" cb="0"/><line nr="216" mi="0" ci="13" mb="0" cb="0"/><line nr="218" mi="0" ci="11" mb="0" cb="0"/><line nr="219" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="19" covered="442"/><counter type="BRANCH" missed="5" covered="49"/><counter type="LINE" missed="1" covered="84"/><counter type="COMPLEXITY" missed="5" covered="39"/><counter type="METHOD" missed="1" covered="16"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="Edge.java"><line nr="16" mi="0" ci="2" mb="0" cb="0"/><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="6" mb="0" cb="0"/><line nr="32" mi="0" ci="10" mb="0" cb="2"/><line nr="37" mi="2" ci="3" mb="1" cb="1"/><line nr="38" mi="2" ci="7" mb="2" cb="2"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="11" mb="0" cb="2"/><line nr="41" mi="0" ci="5" mb="1" cb="1"/><line nr="46" mi="0" ci="14" mb="0" cb="0"/><line nr="51" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="80"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="4" covered="9"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Tree.java"><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MutableTree.java"/><counter type="INSTRUCTION" missed="65" covered="1282"/><counter type="BRANCH" missed="14" covered="140"/><counter type="LINE" missed="6" covered="231"/><counter type="COMPLEXITY" missed="16" covered="121"/><counter type="METHOD" missed="3" covered="57"/><counter type="CLASS" missed="0" covered="7"/></package><counter type="INSTRUCTION" missed="65" covered="1282"/><counter type="BRANCH" missed="14" covered="140"/><counter type="LINE" missed="6" covered="231"/><counter type="COMPLEXITY" missed="16" covered="121"/><counter type="METHOD" missed="3" covered="57"/><counter type="CLASS" missed="0" covered="7"/></report>